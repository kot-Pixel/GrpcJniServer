// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rfcomm.protoc
// Protobuf C++ Version: 6.32.0-dev

#ifndef rfcomm_2eprotoc_2epb_2eh
#define rfcomm_2eprotoc_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_rfcomm_2eprotoc

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_rfcomm_2eprotoc {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_rfcomm_2eprotoc;
}  // extern "C"
namespace carplay {
namespace bt {
enum RfcommTransportDirection : int;
extern const uint32_t RfcommTransportDirection_internal_data_[];
class RfcommPacket;
struct RfcommPacketDefaultTypeInternal;
extern RfcommPacketDefaultTypeInternal _RfcommPacket_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RfcommPacket_class_data_;
}  // namespace bt
}  // namespace carplay
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::carplay::bt::RfcommTransportDirection_internal_data_>
    internal::EnumTraitsImpl::value<::carplay::bt::RfcommTransportDirection>;
}  // namespace protobuf
}  // namespace google

namespace carplay {
namespace bt {
enum RfcommTransportDirection : int {
  UNKNOWN = 0,
  IN = 1,
  OUT = 2,
  RfcommTransportDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RfcommTransportDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RfcommTransportDirection_internal_data_[];
inline constexpr RfcommTransportDirection RfcommTransportDirection_MIN =
    static_cast<RfcommTransportDirection>(0);
inline constexpr RfcommTransportDirection RfcommTransportDirection_MAX =
    static_cast<RfcommTransportDirection>(2);
inline bool RfcommTransportDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int RfcommTransportDirection_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RfcommTransportDirection_descriptor();
template <typename T>
const ::std::string& RfcommTransportDirection_Name(T value) {
  static_assert(::std::is_same<T, RfcommTransportDirection>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to RfcommTransportDirection_Name().");
  return RfcommTransportDirection_Name(static_cast<RfcommTransportDirection>(value));
}
template <>
inline const ::std::string& RfcommTransportDirection_Name(RfcommTransportDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RfcommTransportDirection_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool RfcommTransportDirection_Parse(
    ::absl::string_view name, RfcommTransportDirection* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RfcommTransportDirection>(RfcommTransportDirection_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class RfcommPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:carplay.bt.RfcommPacket) */ {
 public:
  inline RfcommPacket() : RfcommPacket(nullptr) {}
  ~RfcommPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RfcommPacket* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RfcommPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RfcommPacket(::google::protobuf::internal::ConstantInitialized);

  inline RfcommPacket(const RfcommPacket& from) : RfcommPacket(nullptr, from) {}
  inline RfcommPacket(RfcommPacket&& from) noexcept
      : RfcommPacket(nullptr, ::std::move(from)) {}
  inline RfcommPacket& operator=(const RfcommPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline RfcommPacket& operator=(RfcommPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RfcommPacket& default_instance() {
    return *reinterpret_cast<const RfcommPacket*>(
        &_RfcommPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RfcommPacket& a, RfcommPacket& b) { a.Swap(&b); }
  inline void Swap(RfcommPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RfcommPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RfcommPacket* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RfcommPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RfcommPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RfcommPacket& from) { RfcommPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RfcommPacket* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "carplay.bt.RfcommPacket"; }

 protected:
  explicit RfcommPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RfcommPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RfcommPacket& from);
  RfcommPacket(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RfcommPacket&& from) noexcept
      : RfcommPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // bytes payload = 1;
  void clear_payload() ;
  const ::std::string& payload() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_payload();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_payload();
  void set_allocated_payload(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_payload() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_payload(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_payload();

  public:
  // .carplay.bt.RfcommTransportDirection direction = 2;
  void clear_direction() ;
  ::carplay::bt::RfcommTransportDirection direction() const;
  void set_direction(::carplay::bt::RfcommTransportDirection value);

  private:
  ::carplay::bt::RfcommTransportDirection _internal_direction() const;
  void _internal_set_direction(::carplay::bt::RfcommTransportDirection value);

  public:
  // @@protoc_insertion_point(class_scope:carplay.bt.RfcommPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RfcommPacket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    int direction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_rfcomm_2eprotoc;
};

extern const ::google::protobuf::internal::ClassDataFull RfcommPacket_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RfcommPacket

// bytes payload = 1;
inline void RfcommPacket::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RfcommPacket::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:carplay.bt.RfcommPacket.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RfcommPacket::set_payload(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:carplay.bt.RfcommPacket.payload)
}
inline ::std::string* PROTOBUF_NONNULL RfcommPacket::mutable_payload()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:carplay.bt.RfcommPacket.payload)
  return _s;
}
inline const ::std::string& RfcommPacket::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void RfcommPacket::_internal_set_payload(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RfcommPacket::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.payload_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RfcommPacket::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:carplay.bt.RfcommPacket.payload)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.payload_.Set("", GetArena());
  }
  return released;
}
inline void RfcommPacket::set_allocated_payload(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:carplay.bt.RfcommPacket.payload)
}

// .carplay.bt.RfcommTransportDirection direction = 2;
inline void RfcommPacket::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::carplay::bt::RfcommTransportDirection RfcommPacket::direction() const {
  // @@protoc_insertion_point(field_get:carplay.bt.RfcommPacket.direction)
  return _internal_direction();
}
inline void RfcommPacket::set_direction(::carplay::bt::RfcommTransportDirection value) {
  _internal_set_direction(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:carplay.bt.RfcommPacket.direction)
}
inline ::carplay::bt::RfcommTransportDirection RfcommPacket::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::carplay::bt::RfcommTransportDirection>(_impl_.direction_);
}
inline void RfcommPacket::_internal_set_direction(::carplay::bt::RfcommTransportDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bt
}  // namespace carplay


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::carplay::bt::RfcommTransportDirection> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::carplay::bt::RfcommTransportDirection>() {
  return ::carplay::bt::RfcommTransportDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // rfcomm_2eprotoc_2epb_2eh
